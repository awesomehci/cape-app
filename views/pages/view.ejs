<!DOCTYPE html>
<html>
<head>
    <script src="/js/s3_upload.js"></script>
    <% include ../partials/header.ejs %>
</head>

<!-- TODO: change format to 3 column-->
<body>
<script>
    var paper_id = "<%= paper_id %>";
    //console.log(paper_id);


    var paperTitle = "";
    var paperOwner = "";
    var paperURL = "";
    var preferences;
    var needs;

    var xhr = new XMLHttpRequest();
    var url = "/api/papers/" + paper_id;
    xhr.open("GET", url, true);

    //Send the proper header information along with the request
    xhr.setRequestHeader("Content-type", "application/json");
    xhr.setRequestHeader("Accept", "application/json");

    xhr.onreadystatechange = function () {//Call a function when the state changes.

        if (xhr.readyState == 4 && xhr.status == 200) {
            var response = JSON.parse(xhr.responseText);
            //console.log(response);

            paperTitle = response.title;
            paperOwner = response.owner.fullName;
            paperURL = "https://docs.google.com/gview?url=" + response.url + "&embedded=true";
            downloadURL = response.url;
            preferences = response.preferences;
            needs = response.needs;
            //console.log(preferences);

            document.getElementById('paperTitle').innerHTML = "Paper Title: " + paperTitle;
            document.getElementById('paperOwner').innerHTML = "Owner: " + paperOwner;
            document.getElementById('paperIframe').src = paperURL;
            document.getElementById('download_button').href = downloadURL;
            //console.log(paperURL);

            document.getElementById('preferencelist').appendChild(makeUL(preferences));
            document.getElementById('needlist').appendChild(makeUL(needs));
            generate_table(response.proofreaders);

            //Set icons of status cells
            if (document.body.contains(document.getElementById('status_cell_false'))) {
                document.getElementById('status_cell_false').innerHTML = ('<i class="material-icons" style="vertical-align: top; font-size:18px">check_box_outline_blank</i>');
            }
            if (document.body.contains(document.getElementById('status_cell_true'))) {
                document.getElementById("status_cell_true").innerHTML = ('<i class="material-icons" style="vertical-align: top; font-size:18px">check_box</i>');
            }
        }
    }

    function makeUL(array) {
        // Create the list element:
        var list = document.createElement('ul');

        for (var i = 0; i < array.length; i++) {
            // Create the list item:
            var item = document.createElement('li');
            // Set its contents:
            item.appendChild(document.createTextNode(array[i]));
            // Add it to the list:
            list.appendChild(item);
        }
        // Finally, return the constructed list:
        return list;
    }


    function generate_table(array) {
        // First thing: get the current logged in user
        $.getJSON('/api/user', function (user) {
            var tbl = document.createElement("table");
            tbl.className = "table table-striped";

            var tblBody = document.createElement("tbody");

            //Create header
            var col = ["Status", "Proofreader", "Comments & Edits"];
            var tr = tbl.insertRow(-1);

            for (var i = 0; i < col.length; i++) {
                var th = document.createElement("th");      // TABLE HEADER.
                th.innerHTML = col[i];
                tr.appendChild(th);
            }

            // creating all cells
            for (var i = 0; i < array.length; i++) {
                // creates a table row
                var row = document.createElement("tr");
                var statusCell = document.createElement("td");
                var nameCell = document.createElement("td");
                var urlCell = document.createElement("td");
                var cellText; //holder

                //Setting IDs so that the status symbol will show up
                if (array[i].responded == false) {
                    statusCell.setAttribute("id", "status_cell_false");
                }
                else {
                    statusCell.setAttribute("id", "status_cell_true");
                }

                cellText = document.createTextNode(array[i].user.fullName);
                nameCell.appendChild(cellText);

                console.log("Array" + array);

                if (array[i].url == null) { // If the proofreader has not uploaded a paper
                    var proofreader = array[i].user._id;

                    console.log("Proofreader id: " + proofreader);
                    console.log("Logged in user: " + user._id);

                    if (user._id == proofreader) { // If proofreader matches current user, display upload
                        var choose_file = document.createElement("input");
                        choose_file.setAttribute("type", "file");
                        choose_file.setAttribute("id", "uploadPaper");
                        choose_file.onchange = onChange;

                        urlCell.appendChild(choose_file);
                    }
                    else { // Else, don't show anything
                        cellText = document.createTextNode("");
                        console.log("Proofreader is not logged in");
                        urlCell.appendChild(cellText);
                    }
                }
                else { // Else show the url of the uploaded draft
                    var link = document.createElement("a");
                    //link.setAttribute("href", array[i].url, "download", array[i].url);
                    link.setAttribute("href", array[i].url);
                    var linkText = document.createTextNode(array[i].url);

                    link.appendChild(linkText);
                    urlCell.appendChild(link);
                }
                row.appendChild(statusCell);
                row.appendChild(nameCell);
                row.appendChild(urlCell);

                // add the row to the end of the table body
                tblBody.appendChild(row);
            }

            // put the <tbody> in the <table>
            tbl.appendChild(tblBody);
            // appends <table> into <body>
            document.getElementById("showData").appendChild(tbl);
        });
    }

    function onChange() {
        // TODO Validate input

        // Get file from picker
        var file = document.getElementById('uploadPaper').files[0];
        if (file == null) {
            return alert('No file selected.');
        }

        // Check file size
        if (file.size > 16777216) { // 16 MB
            return alert('File size must be < 16 MB!');
        }

        uploadFile(file, function (url) {
            // Get user ID
            $.getJSON('/api/user', function (user) {
                // Make paper JSON
                var paper = {
                    proofreader: user._id,
                    url: url,
                };

                // Post paper to server
                $.ajax('/api/papers/' + paper_id + '/uploadProofread', {
                    type: 'POST',
                    data: JSON.stringify(paper),
                    contentType: 'application/json',
                    success: function (data) {
                        console.log('success');
                        // TODO Success redirect
                        //$(location).attr('href', '/view/'+paper_id); // TODO Redirect to view paper
                        window.location.reload();
                    },
                    failure: function (data) {
                        alert('Paper creation failed!');
                    }
                });
            });
        });
    }

    window.onload = function () {
        xhr.send();
    }

</script>

<div class="col-md-6">
    <div class="container-fluid">
        <div class="row">
            <h1 class="text-center">View Paper Status</h1>
            <hr>
        </div>
        <div class="col-md-6 col-md-offset-3">
            <div class="row">
                <h3 class="text-center"><span id="paperTitle"></span></h3>
                <p class="text-center" style="font-weight: bold"><span id="paperOwner"></span></p>
                <hr>
            </div>

            <div class="row">
                <h3 class="text-center">Preferences</h3>
                <hr>
                <div id="preferencelist"></div>
                <hr>
            </div>

            <div class="row">
                <h3 class="text-center">Proofreading Needs</h3>
                <hr>
                <div id="needlist"></div>
                <hr>
            </div>

            <div class="row">
                <h3 class="text-center">Proofreaders</h3>
                <hr>
                <div id="showData"></div>

            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <hr>
            <a type="button" class="btn btn-primary btn-lg" href="/">Back to Account</a>
        </div>

    </div>
</div>


<div class="col-md-6">
    <div>
        <a id="download_button" type="button" class="btn btn-primary btn-lg btn-block"
           href="https://github.com/heroku/node-js-getting-started">Download Paper</a>
    </div>

    <div class="embed-responsive embed-responsive-4by3">
        <iframe id="paperIframe" class="embed-responsive-item" style="width: 100%; height:100%;"></iframe>
    </div>
</div>

</body>
</html>
